#==============================================================================
# VERSION:        2.0
# DESCRIPTION:    Create container with its dependencies for the execution of QDT
# AUTHOR:         J. C. Gonzalez <JCGonzalez@sciops.esa.int>
# COMMENTS:
#   This file describes how to build a container for the execution of the
#   QLA Diagnostic Tools.  The tools are not embeded in the container, but
#   they are rather installed in the host and mapped to internal container
#   paths when the container is executed.
# USAGE:
#   # Build QDT image (for now the image name:tag is always qpf-debian:a)
#   docker build -t qpf-debian:a .
#
#   # Run interactive
#   docker run -i -t --priviledged=true \
#       -v {procBinPath}:/qlabin \
#       -v {localPath}/:{imgPath} \
#       qpf-debian:a /bin/bash {imgPath}/{procElem} {imgPath}/dummy.cfg
#
#  Runing script {procElem} assumes the QDT is in /qlabin
#==============================================================================

# Base Docker image
FROM qdt-vis_nisp-debian:base
MAINTAINER J C Gonzalez <JCGonzalez@sciops.esa.int>
ENV QPF_VERSION 2.0

LABEL esa.euclid.soc.qla.content="QDT required packages" \
      esa.euclid.soc.qla.version="2.0" \
      esa.euclid.soc.qla.release-date="2018-02-06"
      
# Use gosu to move down from ROOT to other users, without the signals trap
# problems of sudo
# First, install gosu:
# https://github.com/tianon/gosu/blob/master/INSTALL.md
ENV GOSU_VERSION 1.10
RUN apt-get update && \
    apt-get install -y wget && \
    set -ex; \
    dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
    gosuUrl="https://github.com/tianon/gosu/releases/download/$GOSU_VERSION"; \
    wget -O /usr/bin/gosu "$gosuUrl/gosu-$dpkgArch"; \
    chmod +x /usr/bin/gosu
    #wget -O /tmp/gosu.asc "$gosuUrl/gosu-$dpkgArch.asc"; \
    #export GNUPGHOME="$(mktemp -d)"; \
    #gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
    #gpg --batch --verify /tmp/gosu.asc /usr/bin/gosu; \
    #rm -r "$GNUPGHOME" /tmp/gosu.asc; \

# Then, create entry-point to run at container startup:
# https://denibertovic.com/posts/handling-permissions-with-docker-volumes/
COPY entrypoint.sh /usr/bin/entrypoint.sh
RUN chmod +x /usr/bin/entrypoint.sh
ENTRYPOINT ["/usr/bin/entrypoint.sh"]
